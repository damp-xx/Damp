///////////////////////////////////////////////////////////
//  SpriteContainer.cs
//  Implementation of the Class SpriteContainer
//  Generated by Enterprise Architect
//  Created on:      16-apr-2013 11:48:21
//  Original author: Space-Punk
///////////////////////////////////////////////////////////


using System.Collections.Generic;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;

namespace Sprites {
    public enum listTypes
    {
        Background = 0,

        Player = 1,
        Monster = 2,
        Environment = 3,
        DeathAnimation = 4
    }
	public class SpriteContainer : ISpriteContainer, ISpriteContainerCollision {

		public Sprites.IAnchorUpdate _IAnchorUpdate;
		public Sprites.ISprite _ISprite;
	    private List<List<ISprite>> _spriteList;
        private IAnchorUpdate _anchor;


	    public void ReUpdate(Vector2 mPos)
	    {
	        throw new System.NotImplementedException();
	    }

	    public List<List<ISprite>> SpriteList { get { return _spriteList; } }

        public SpriteContainer(List<List<ISprite>> mList, IAnchorUpdate mAnchorUpdate)
        {
            _spriteList = mList;
            _anchor = mAnchorUpdate;
        }


	    public void AddDeathAnimation(ISprite mSprite)
	    {
	        _spriteList[(int)listTypes.DeathAnimation].Add(mSprite);
	    }

	    public void RemoveMonster(ISprite mSprite)
	    {
	        _spriteList[(int) listTypes.Monster].Remove(mSprite);
	    }

	    public void RemovePlayer(ISprite mSprite)
	    {
	        _spriteList[(int) listTypes.Player].Remove(mSprite);
	    }


	    public void Update(GameTime time)
	    {
	        _anchor.Update(time);
	        foreach (var _list in _spriteList)
	        {
	            foreach (var sprite in _list)
	            {
	                sprite.Update(time);
	            }
	        }
	    }

	    public void Draw(SpriteBatch spriteBatch)
	    {
            foreach (var _list in _spriteList)
            {
                foreach (var sprite in _list)
                {
                    sprite.Draw(spriteBatch);
                }
            }
	    }
	}//end SpriteContainer

}//end namespace Sprites