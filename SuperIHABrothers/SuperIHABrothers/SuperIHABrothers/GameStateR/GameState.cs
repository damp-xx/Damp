///////////////////////////////////////////////////////////
//  GameState.cs
//  Implementation of the Class GameState
//  Generated by Enterprise Architect
//  Created on:      16-apr-2013 11:48:51
//  Original author: Space-Punk
///////////////////////////////////////////////////////////




using GameState;
namespace GameState {
	public class GameState : IGameState, IGameStateEvent, IGameStateLevel {

		public GameState(){

		}

		~GameState(){

		}

		public virtual void Dispose(){

		}

		/// 
		/// <param name="mScore"></param>
		public void AddScore(int mScore){

		}

		public int GameLevel{
			get{
				return GameLevel;
			}
			set{
				GameLevel = value;
			}
		}

		public bool GameRunning{
			get{
				return GameRunning;
			}
			set{
				GameRunning = value;
			}
		}

		public int IGameState.Lifes{
			get{
				return Lifes;
			}
			set{
				Lifes = value;
			}
		}

		public void LoseLife(){

		}

		public int IGameState.Score{
			get{
				return Score;
			}
			set{
				Score = value;
			}
		}

		public int IGameState.Score{
			get{
				return Score;
			}
		}

		public int IGameStateLevel.Lifes{
			set{
				Lifes = value;
			}
		}

		public int IGameStateLevel.Score{
			get{
				return Score;
			}
			set{
				Score = value;
			}
		}

	}//end GameState

}//end namespace GameState