///////////////////////////////////////////////////////////
//  PlayerEnvironmentLeftEvent.cs
//  Implementation of the Class PlayerEnvironmentLeftEvent
//  Generated by Enterprise Architect
//  Created on:      04-maj-2013 22:43:07
//  Original author: Filip
///////////////////////////////////////////////////////////


using Microsoft.Xna.Framework;
using Sprites;

namespace Collision {
	public class PlayerEnvironmentLeftEvent : IEvent {

        private SpritePlayer _playerSprite;
        private SpriteEnviroment _environmentSprite;
        private ISpriteContainerCollision _ReUpdate;

        public PlayerEnvironmentLeftEvent(ISprite player, ISprite environmentSprite, ISpriteContainerCollision mReUpdate)
        {
            _playerSprite = (SpritePlayer)player;
            _environmentSprite = (SpriteEnviroment)environmentSprite;
            _ReUpdate = mReUpdate;
            HandleEvent();
		}

		private void HandleEvent()
		{
            _playerSprite.Velocity = new Vector2(0, _playerSprite.Velocity.Y);
            float playerEnvDiff = _playerSprite.MyRectangle.Right - _environmentSprite.MyRectangle.Left;
            float anchorX = _environmentSprite._anchor.Position.X;
            float anchorY = _environmentSprite._anchor.Position.Y;
            
            _environmentSprite._anchor.Position = new Vector2(anchorX+playerEnvDiff, anchorY);
            _ReUpdate.ReUpdate();
		}

	}//end PlayerEnvironmentLeftEvent

}//end namespace CollitionControle