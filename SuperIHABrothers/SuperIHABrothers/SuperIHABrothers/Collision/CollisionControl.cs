///////////////////////////////////////////////////////////
//  CollisionControl.cs
//  Implementation of the Class CollisionControl
//  Generated by Enterprise Architect
//  Created on:      16-apr-2013 11:50:49
//  Original author: Filip V
///////////////////////////////////////////////////////////


using System.Collections.Generic;
using Sprites;

internal enum SpritesOrder

{
    Player = 1,
    Monster = 2,
    Environment = 3,
    DeathAnimation = 4,
    Evironment = 5
};

namespace Collision
{
    public class CollisionControl : ICollisionControl
    {
        private ISpriteContainerCollision _spriteContainerCollision;
        private ICollisionDetect _playerEnviromentDetect;
        private ICollisionDetect _playerMonsterDetect;
        private ICollisionDetect _monsterEnviromentDetect;

        public CollisionControl(ISpriteContainerCollision mSpriteContainerCollision,
                                ICollisionDetect mPlayerEnviromentDetect)
        {
            _spriteContainerCollision = mSpriteContainerCollision;
            _playerEnviromentDetect = mPlayerEnviromentDetect;
        }


        /// 
        /// <param name="mSprites"></param>
        public List<IEvent> Update()
        {
            List<IEvent> eventList = new List<IEvent>();

            eventList.AddRange(CheckForPlayerCollision());
            eventList.AddRange(CheckForMonsterCollision()); 

            return eventList;
        }

        private List<IEvent> CheckForPlayerCollision()
        {
            List<IEvent> eventList = new List<IEvent>();

            for (int i = 0; i < _spriteContainerCollision.SpriteList[(int) SpritesOrder.Player].Count; i++)
            {       
                /* Checking with Monster */
                for (int j = 0; j < _spriteContainerCollision.SpriteList[(int) SpritesOrder.Monster].Count; j++)
                {
                    if (_spriteContainerCollision.SpriteList[(int) SpritesOrder.Player][i].MyRectangle.Intersects(
                        _spriteContainerCollision.SpriteList[(int) SpritesOrder.Monster][j].MyRectangle))
                    {
                        eventList.Add(_playerMonsterDetect.Detect(_spriteContainerCollision,
                                                                  _spriteContainerCollision.SpriteList[(int) SpritesOrder.Player][i],
                                                                  _spriteContainerCollision.SpriteList[(int) SpritesOrder.Monster][j]));
                    }
                }

                /* Checking with Evironment */
                for (int j = 0; j < _spriteContainerCollision.SpriteList[(int)SpritesOrder.Environment].Count; j++)
                {
                    if (_spriteContainerCollision.SpriteList[(int)SpritesOrder.Player][i].MyRectangle.Intersects(
                        _spriteContainerCollision.SpriteList[(int)SpritesOrder.Environment][j].MyRectangle))
                    {
                        eventList.Add(_playerMonsterDetect.Detect(_spriteContainerCollision,
                                                                  _spriteContainerCollision.SpriteList[(int)SpritesOrder.Player][i],
                                                                  _spriteContainerCollision.SpriteList[(int)SpritesOrder.Environment][j]));
                    }
                }
            }
            return eventList;
        }


        private List<IEvent> CheckForMonsterCollision()
        {
            List<IEvent> eventList = new List<IEvent>();

            for (int i = 0; i < _spriteContainerCollision.SpriteList[(int)SpritesOrder.Monster].Count; i++)
            {
                /* Checking with Evironment */
                for (int j = 0; j < _spriteContainerCollision.SpriteList[(int)SpritesOrder.Environment].Count; j++)
                {
                    if (_spriteContainerCollision.SpriteList[(int)SpritesOrder.Monster][i].MyRectangle.Intersects(
                        _spriteContainerCollision.SpriteList[(int)SpritesOrder.Environment][j].MyRectangle))
                    {
                        eventList.Add(_playerMonsterDetect.Detect(_spriteContainerCollision,
                                                                  _spriteContainerCollision.SpriteList[(int)SpritesOrder.Monster][i],
                                                                  _spriteContainerCollision.SpriteList[(int)SpritesOrder.Environment][j]));
                    }
                }
            }
            return eventList;
        }
    }

//end CollisionControl
}

//end namespace CollitionControl